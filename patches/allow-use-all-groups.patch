diff --git a/ckan/logic/action/get.py b/ckan/logic/action/get.py
index 365fe71..df779ac 100644
--- a/ckan/logic/action/get.py
+++ b/ckan/logic/action/get.py
@@ -463,25 +463,10 @@ def group_list_authz(context, data_dict):
     if not user_id:
         return []
 
-    if not sysadmin or am_member:
-        q = model.Session.query(model.Member) \
-            .filter(model.Member.table_name == 'user') \
-            .filter(model.Member.capacity.in_(roles)) \
-            .filter(model.Member.table_id == user_id)
-        group_ids = []
-        for row in q.all():
-            group_ids.append(row.group_id)
-
-        if not group_ids:
-            return []
-
     q = model.Session.query(model.Group) \
         .filter(model.Group.is_organization == False) \
         .filter(model.Group.state == 'active')
 
-    if not sysadmin or am_member:
-        q = q.filter(model.Group.id.in_(group_ids))
-
     groups = q.all()
 
     if available_only:
@@ -1463,7 +1448,7 @@ def package_search(context, data_dict):
         # If this query hasn't come from a controller that has set this flag
         # then we should remove any mention of capacity from the fq and
         # instead set it to only retrieve public datasets
-        fq = data_dict.get('fq', '')
+        fq = data_dict.get('fq', '-harvest_portal:*')
         if not context.get('ignore_capacity_check', False):
             fq = ' '.join(p for p in fq.split(' ')
                             if not 'capacity:' in p)
diff --git a/ckan/logic/auth/create.py b/ckan/logic/auth/create.py
index a14bb15..f745c9d 100644
--- a/ckan/logic/auth/create.py
+++ b/ckan/logic/auth/create.py
@@ -236,6 +236,9 @@ def member_create(context, data_dict):
     authorized = new_authz.has_user_permission_for_group_or_org(group.id,
                                                                 user,
                                                                 permission)
+    if not group.is_organization and data_dict.get('object_type') == 'package':
+        authorized = True
+
     if not authorized:
         return {'success': False,
                 'msg': _('User %s not authorized to edit group %s') %
diff --git a/ckan/lib/dictization/model_save.py b/ckan/lib/dictization/model_save.py
index 56ba6ec..c1bb86d 100644
--- a/ckan/lib/dictization/model_save.py
+++ b/ckan/lib/dictization/model_save.py
@@ -237,8 +237,7 @@ def package_membership_list_save(group_dicts, package, context):
         member_obj = group_member[group]
         if member_obj and member_obj.state == 'deleted':
             continue
-        if new_authz.has_user_permission_for_group_or_org(
-                member_obj.group_id, user, 'read'):
+        if True:
             member_obj.capacity = capacity
             member_obj.state = 'deleted'
             session.add(member_obj)
@@ -248,8 +247,7 @@ def package_membership_list_save(group_dicts, package, context):
         member_obj = group_member.get(group)
         if member_obj and member_obj.state == 'active':
             continue
-        if new_authz.has_user_permission_for_group_or_org(
-                group.id, user, 'read'):
+        if True:
             member_obj = group_member.get(group)
             if member_obj:
                 member_obj.capacity = capacity

diff --git a/ckan/templates/package/snippets/package_basic_fields.html b/ckan/templates/package/snippets/package_basic_fields.html
index 0418e3b..60f17c2 100644
--- a/ckan/templates/package/snippets/package_basic_fields.html
+++ b/ckan/templates/package/snippets/package_basic_fields.html
@@ -47,10 +47,7 @@
 {% endblock %}
 
 {% block package_basic_fields_org %}
-  {# if we have a default group then this wants remembering #}
-  {% if data.group_id %}
-    <input type="hidden" name="groups__0__id" value="{{ data.group_id }}" />
-  {% endif %}
+
 
   {% set dataset_is_draft = data.get('state', 'draft').startswith('draft') or data.get('state', 'none') ==  'none' %}
   {% set dataset_has_organization = data.owner_org or data.group_id %}

